{"ast":null,"code":"var _jsxFileName = \"/home/yash/Desktop/yashbhangale.github.io/portfolio-terminal/src/components/Blog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport remarkGfm from 'remark-gfm';\nimport './Blog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/content/blog/index.json');\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePostClick = async slug => {\n    try {\n      const response = await fetch(`/content/blog/${slug}.md`);\n      const content = await response.text();\n      const post = posts.find(p => p.slug === slug);\n      if (post) {\n        setSelectedPost({\n          ...post,\n          content\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching post content:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-loading\",\n      children: \"Loading blog posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedPost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => setSelectedPost(null),\n        children: \"\\u2190 Back to Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-date\",\n          children: new Date(selectedPost.date).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-tags\",\n          children: selectedPost.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: [\"#\", tag]\n          }, tag, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          remarkPlugins: [remarkGfm],\n          components: {\n            code({\n              node,\n              inline,\n              className,\n              children,\n              ...props\n            }) {\n              const match = /language-(\\w+)/.exec(className || '');\n              return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                style: vscDarkPlus,\n                language: match[1],\n                PreTag: \"div\",\n                ...props,\n                children: String(children).replace(/\\n$/, '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                className: className,\n                ...props,\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this);\n            }\n          },\n          children: selectedPost.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-grid\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        onClick: () => handlePostClick(post.slug),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-date\",\n            children: new Date(post.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-tags\",\n            children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tag\",\n              children: [\"#\", tag]\n            }, tag, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, post.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"56GK2KDcqsC4McTPKkoqJsVawGg=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","ReactMarkdown","Prism","SyntaxHighlighter","vscDarkPlus","remarkGfm","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","selectedPost","setSelectedPost","loading","setLoading","fetchPosts","response","fetch","data","json","error","console","handlePostClick","slug","content","text","post","find","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","Date","date","toLocaleDateString","tags","map","tag","remarkPlugins","components","code","node","inline","props","match","exec","style","language","PreTag","String","replace","_c","$RefreshReg$"],"sources":["/home/yash/Desktop/yashbhangale.github.io/portfolio-terminal/src/components/Blog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport remarkGfm from 'remark-gfm';\nimport './Blog.css';\n\ninterface BlogPost {\n  title: string;\n  date: string;\n  tags: string[];\n  content: string;\n  slug: string;\n}\n\ninterface CodeProps {\n  node?: any;\n  inline?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  [key: string]: any;\n}\n\nconst Blog: React.FC = () => {\n  const [posts, setPosts] = useState<BlogPost[]>([]);\n  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/content/blog/index.json');\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handlePostClick = async (slug: string) => {\n    try {\n      const response = await fetch(`/content/blog/${slug}.md`);\n      const content = await response.text();\n      const post = posts.find(p => p.slug === slug);\n      if (post) {\n        setSelectedPost({ ...post, content });\n      }\n    } catch (error) {\n      console.error('Error fetching post content:', error);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"blog-loading\">Loading blog posts...</div>;\n  }\n\n  if (selectedPost) {\n    return (\n      <div className=\"blog-post\">\n        <button className=\"back-button\" onClick={() => setSelectedPost(null)}>\n          ‚Üê Back to Blog\n        </button>\n        <h1>{selectedPost.title}</h1>\n        <div className=\"post-meta\">\n          <span className=\"post-date\">{new Date(selectedPost.date).toLocaleDateString()}</span>\n          <div className=\"post-tags\">\n            {selectedPost.tags.map(tag => (\n              <span key={tag} className=\"tag\">#{tag}</span>\n            ))}\n          </div>\n        </div>\n        <div className=\"post-content\">\n          <ReactMarkdown\n            remarkPlugins={[remarkGfm]}\n            components={{\n              code({ node, inline, className, children, ...props }: CodeProps) {\n                const match = /language-(\\w+)/.exec(className || '');\n                return !inline && match ? (\n                  <SyntaxHighlighter\n                    style={vscDarkPlus}\n                    language={match[1]}\n                    PreTag=\"div\"\n                    {...props}\n                  >\n                    {String(children).replace(/\\n$/, '')}\n                  </SyntaxHighlighter>\n                ) : (\n                  <code className={className} {...props}>\n                    {children}\n                  </code>\n                );\n              },\n            }}\n          >\n            {selectedPost.content}\n          </ReactMarkdown>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blog-list\">\n      <h1>Blog Posts</h1>\n      <div className=\"posts-grid\">\n        {posts.map(post => (\n          <div key={post.slug} className=\"post-card\" onClick={() => handlePostClick(post.slug)}>\n            <h2>{post.title}</h2>\n            <div className=\"post-meta\">\n              <span className=\"post-date\">{new Date(post.date).toLocaleDateString()}</span>\n              <div className=\"post-tags\">\n                {post.tags.map(tag => (\n                  <span key={tag} className=\"tag\">#{tag}</span>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}