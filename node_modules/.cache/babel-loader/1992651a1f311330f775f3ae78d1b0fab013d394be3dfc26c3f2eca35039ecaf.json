{"ast":null,"code":"var _jsxFileName = \"/home/yash/Desktop/yashbhangale.github.io/portfolio-terminal/src/components/Blog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './Blog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch blog posts\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/blogs/index.json');\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const loadPostContent = async postId => {\n    try {\n      const response = await fetch(`/blogs/${postId}.md`);\n      const content = await response.text();\n      const post = posts.find(p => p.id === postId);\n      if (post) {\n        setSelectedPost({\n          ...post,\n          content\n        });\n      }\n    } catch (error) {\n      console.error('Error loading blog post:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-container\",\n      children: \"Loading blog posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-container\",\n    children: selectedPost ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => setSelectedPost(null),\n        children: \"\\u2190 Back to Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-date\",\n        children: selectedPost.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: selectedPost.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-preview\",\n        onClick: () => loadPostContent(post.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-date\",\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"56GK2KDcqsC4McTPKkoqJsVawGg=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","ReactMarkdown","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","selectedPost","setSelectedPost","loading","setLoading","fetchPosts","response","fetch","data","json","error","console","loadPostContent","postId","content","text","post","find","p","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","date","map","_c","$RefreshReg$"],"sources":["/home/yash/Desktop/yashbhangale.github.io/portfolio-terminal/src/components/Blog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './Blog.css';\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  date: string;\n  content: string;\n}\n\nconst Blog: React.FC = () => {\n  const [posts, setPosts] = useState<BlogPost[]>([]);\n  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch blog posts\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/blogs/index.json');\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const loadPostContent = async (postId: string) => {\n    try {\n      const response = await fetch(`/blogs/${postId}.md`);\n      const content = await response.text();\n      const post = posts.find(p => p.id === postId);\n      if (post) {\n        setSelectedPost({ ...post, content });\n      }\n    } catch (error) {\n      console.error('Error loading blog post:', error);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"blog-container\">Loading blog posts...</div>;\n  }\n\n  return (\n    <div className=\"blog-container\">\n      {selectedPost ? (\n        <div className=\"blog-post\">\n          <button className=\"back-button\" onClick={() => setSelectedPost(null)}>\n            ‚Üê Back to Posts\n          </button>\n          <h1>{selectedPost.title}</h1>\n          <div className=\"post-date\">{selectedPost.date}</div>\n          <div className=\"post-content\">\n            <ReactMarkdown>{selectedPost.content}</ReactMarkdown>\n          </div>\n        </div>\n      ) : (\n        <div className=\"blog-list\">\n          <h1>Blog Posts</h1>\n          {posts.map(post => (\n            <div \n              key={post.id} \n              className=\"blog-preview\"\n              onClick={() => loadPostContent(post.id)}\n            >\n              <h2>{post.title}</h2>\n              <div className=\"post-date\">{post.date}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Blog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}